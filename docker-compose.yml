version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    environment:
      - node.name=elasticsearch
      - cluster.name=datasearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.initial_master_nodes=elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - nets
    ports:
      - "9200:9200"
    volumes:
      - ./es/data:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.2
    networks:
      - nets
    ports:
      - "5601:5601"
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-123}
      PGDATA: /data/postgres
      DB_EXTENSION: uuid-ossp
    volumes:
      - ./postgres/data:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - nets
    restart: unless-stopped
  mysql:
    image: mysql
    platform: linux/x86_64
    restart: always
    build:
      context: ./mysql
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
      - ./mysql/logs:/var/log/mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
      MYSQL_ROOT_HOST: '%'
    networks:
      - nets
  php74:
    build:
      context: ./php74
      dockerfile: Dockerfile
    volumes:
      - ~/Sites:/var/www/html
      - ./php74/php.ini:/usr/local/etc/php/php.ini
      - ./php74/sites-available:/etc/apache2/sites-available
    ports:
      - "80:80"
    networks:
      - nets
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      - "80:80"
  php56:
    build:
      context: ./php56
      dockerfile: Dockerfile
    volumes:
      - ~/Sites:/var/www/html
      - ./php56/php.ini:/usr/local/etc/php/php.ini
    ports:
      - "80:80"
    networks:
      - nets
  litespeed:
    platform: linux/x86_64
    build:
      context: ./lsws
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./lsws/conf:/usr/local/lsws/conf
      - ./lsws/admin-conf:/usr/local/lsws/admin/conf
      - ./lsws/bin/container:/usr/local/bin
      - ~/Sites:/var/www/vhosts/
      - ./lsws/acme:/root/.acme.sh/
      - ./lsws/logs:/usr/local/lsws/logs/
      - ./lsws/php-conf/php74.ini:/usr/local/lsws/lsphp74/etc/php/7.4/litespeed/php.ini
      - ./lsws/php-conf/php80.ini:/usr/local/lsws/lsphp80/etc/php/8.0/litespeed/php.ini
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
      - 7080:7080
      - 8088:8088
    restart: always
    environment:
      TZ: ${TimeZone}
    networks:
      - nets
  mongo:
    build: ./mongo
    ports:
      - "${MONGODB_PORT}:27017"
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
#      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - ./mongo/db:/data/db
      - ./mongo/config:/data/configdb
    networks:
      - nets

networks:
  nets:
    driver: bridge